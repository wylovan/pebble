<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd">

  <context:component-scan base-package="net.sourceforge.pebble"/>

  <bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="/WEB-INF/pebble.properties"/>
  </bean>

  <bean id="pebbleConfiguration" class="net.sourceforge.pebble.Configuration">

    <!-- the location where your Pebble data is stored, default is ${user.home}/pebble -->
    <property name="dataDirectory" value="${dataDirectory}"/>

    <!-- Allows Pebble to run in virtual hosting mode (multi blog feature) -->
    <property name="virtualHostingEnabled" value="${virtualHostingEnabled}"/>

    <!-- When pebble runs in virtual hosting mode, will determine is the blog name is just to be prepended to the host name or if the blog name is the host name. -->
    <property name="virtualHostingSubdomain" value="${virtualHostingSubdomain}"/>

    <!-- When pebble runs in virtual hosting mode, determine if https should be used for secure URLs. -->
    <property name="multiBlogHttps" value="${multiBlogHttps}"/>

    <!-- the base URL (can start http:// or https://) where your blog is hosted, default is auto-discover at runtime -->
    <property name="url" value="${url}"/>

    <!-- the secure URL (starting https://), which should only be set if you intend to use secure login -->
    <property name="secureUrl" value="${secureUrl}"/>

    <!-- a flag to indicate whether Pebble is running in multi-blog mode, default is false -->
    <property name="multiBlog" value="${multiBlog}"/>

    <!-- the name/IP address of the server through which e-mail is sent, or a JNDI name starting java:/comp/env pointing to a preconfigured javax.mail.Session instance -->
    <property name="smtpHost" value="${smtpHost}"/>

    <!-- the port on which the smtp server specified above is running -->
    <property name="smtpPort" value="${smtpPort}"/>

    <!-- the SecurityRealm implementation being used -->
    <property name="securityRealm" ref="pebbleSecurityRealm"/>

    <!-- the maximum file upload size in KB -->
    <property name="fileUploadSize" value="${fileUploadSize}"/>

    <!-- a flag to indicate whether user themes are enabled, default is true -->
    <property name="userThemesEnabled" value="${userThemesEnabled}"/>
  </bean>

  <bean id="lastModifiedService" class="net.sourceforge.pebble.service.DefaultLastModifiedService"/>

  <bean id="httpController" class="net.sourceforge.pebble.web.controller.DefaultHttpController">
    <property name="actionFactory" ref="actionFactory"/>
  </bean>

  <bean id="actionFactory" class="net.sourceforge.pebble.web.action.DefaultActionFactory">
    <property name="actionMappingFileName" value="action.properties"/>
  </bean>

  <bean id="secureHttpController" class="net.sourceforge.pebble.web.controller.DefaultHttpController">
    <property name="actionExtension" value=".secureaction"/>
    <property name="actionFactory" ref="secureActionFactory"/>
  </bean>

  <bean id="secureActionFactory" class="net.sourceforge.pebble.web.action.DefaultActionFactory">
    <property name="actionMappingFileName" value="secure-action.properties"/>
  </bean>

</beans>
