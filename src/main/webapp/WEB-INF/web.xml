<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

  <display-name>Pebble</display-name>
  <description>My blog, powered by Pebble</description>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      /WEB-INF/applicationContext-pebble.xml
      /WEB-INF/applicationContext-security.xml
      /WEB-INF/applicationContext-xmlrpc.xml
    </param-value>
  </context-param>

  <jsp-config>
    <jsp-property-group>
      <url-pattern>*.jsp</url-pattern>
      <scripting-invalid>true</scripting-invalid>
      <include-prelude>/WEB-INF/fragments/prelude.jspf</include-prelude>
      <include-coda>/WEB-INF/fragments/coda.jspf</include-coda>
    </jsp-property-group>

    <jsp-property-group>
      <url-pattern>*.xml</url-pattern>
      <scripting-invalid>true</scripting-invalid>
      <include-prelude>/WEB-INF/xml/prelude.jspf</include-prelude>
      <include-prelude>/WEB-INF/xml/coda.jspf</include-prelude>
    </jsp-property-group>

    <jsp-property-group>
      <url-pattern>*.txt</url-pattern>
      <scripting-invalid>true</scripting-invalid>
    </jsp-property-group>
  </jsp-config>

  <filter>
    <filter-name>ResponseSplittingPreventer</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.ResponseSplittingPreventer</filter-class>
  </filter>

  <filter>
    <filter-name>BlogLookupFilter</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.BlogLookupFilter</filter-class>
  </filter>

  <filter>
    <filter-name>TransformingFilter</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.TransformingFilter</filter-class>
  </filter>

  <filter>
    <filter-name>filterChainProxy</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <filter>
    <filter-name>PreProcessingFilter</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.PreProcessingFilter</filter-class>
  </filter>

  <filter>
    <filter-name>DispatchingFilter</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.DispatchingFilter</filter-class>
  </filter>

  <filter>
    <filter-name>GZIPFilter</filter-name>
    <filter-class>net.sourceforge.pebble.web.filter.GZIPFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>ResponseSplittingPreventer</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>BlogLookupFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <!-- gzip filter *must* come after the blog lookup filter, because it uses the encoding of the
      currently set blog -->
  <filter-mapping>
    <filter-name>GZIPFilter</filter-name>
    <url-pattern>*.html</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>GZIPFilter</filter-name>
    <url-pattern>*.js</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>GZIPFilter</filter-name>
    <url-pattern>*.css</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>TransformingFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>filterChainProxy</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>PreProcessingFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>DispatchingFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>net.sourceforge.pebble.web.listener.PebbleContextListener</listener-class>
  </listener>

  <listener>
    <listener-class>net.sourceforge.pebble.aggregator.NewsFeedContextListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>HttpController</servlet-name>
    <servlet-class>net.sourceforge.pebble.web.controller.HttpControllerServlet</servlet-class>

    <init-param>
      <param-name>httpControllerBeanName</param-name>
      <param-value>httpController</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>SecureController</servlet-name>
    <servlet-class>net.sourceforge.pebble.web.controller.HttpControllerServlet</servlet-class>

    <init-param>
      <param-name>httpControllerBeanName</param-name>
      <param-value>secureHttpController</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>XmlRpcController</servlet-name>
    <servlet-class>net.sourceforge.pebble.web.controller.XmlRpcController</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>index.jsp</servlet-name>
    <jsp-file>/index.jsp</jsp-file>
  </servlet>

  <servlet>
    <servlet-name>jcaptcha</servlet-name>
    <servlet-class>net.sourceforge.pebble.confirmation.ImageCaptchaServlet</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>dwr-invoker</servlet-name>
    <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
    <init-param>
      <param-name>debug</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>allowGetForSafariButMakeForgeryEasier</param-name>
      <param-value>true</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>ping</servlet-name>
    <servlet-class>net.sourceforge.pebble.web.servlet.PingServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>ping</servlet-name>
    <url-pattern>/ping</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>dwr-invoker</servlet-name>
    <url-pattern>/dwr/*</url-pattern>
  </servlet-mapping>


  <servlet-mapping>
    <servlet-name>HttpController</servlet-name>
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SecureController</servlet-name>
    <url-pattern>*.secureaction</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>XmlRpcController</servlet-name>
    <url-pattern>/xmlrpc/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>index.jsp</servlet-name>
    <url-pattern>/index.html</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>jcaptcha</servlet-name>
    <url-pattern>/jcaptcha</url-pattern>
  </servlet-mapping>

  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>

  <!--
  <error-page>
    <error-code>401</error-code>
    <location>/401.action</location>
  </error-page>
  -->

  <error-page>
    <error-code>403</error-code>
    <location>/403.action</location>
  </error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/404.action</location>
  </error-page>

  <error-page>
    <error-code>500</error-code>
    <location>/error.action</location>
  </error-page>

  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/error.action</location>
  </error-page>

  <!-- uncomment this if you would like to use a JNDI-based JavaMail Session
  -->
  <resource-ref>
    <description>
      Resource reference to a factory for javax.mail.Session
      instances that may be used for sending electronic mail
      messages, preconfigured to connect to the appropriate
      SMTP server.
    </description>
    <res-ref-name>mail/Session</res-ref-name>
    <res-type>javax.mail.Session</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

</web-app>
